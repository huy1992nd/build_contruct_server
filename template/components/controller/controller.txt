const ***table***Service = require('../services/***table***.service'); 

class ***table_u***Controller {
    constructor() {
    }

    async add***table_u***(req, res, next) {
        let body = req.body;
        let validateInput = await this.validateInput(body, 1);
        if (!validateInput.status) {
            res.json({ code: 1, message: validateInput.error_message });
            return;
        }

        let add_***table*** = await ***table***Service.add***table_u***(body);
        if (add_***table***) {
            res.json({ code: 0, message: message.ADD_***table***_SUCCESS });
        } else {
            res.json({ code: 1, message: message.ERROR });
        }
    }

    async update***table_u***(req, res, next) {
        let body = req.body;
        console.log('body', body);

        if (!body.id || typeof(body.id) == "undefined") {
            res.json({ code: 1, message: message.INCORRECT_DATA });
            return;
        }
        let validateInput = await this.validateInput(body, 1);
        if (!validateInput.status) {
            res.json({ code: 1, message: validateInput.error_message });
            return;
        }
        let update_***table*** = ***table***Service.update***table_u***(body);
        if (update_***table***) {
            res.json({ code: 0, message: message.EDIT_***table***_SUCCESS });
        } else {
            res.json({ code: 1, message: message.ERROR });
        }
    }

    async delete***table_u***(req, res, next) {
        let body = req.body;
        if (!body.id || typeof(body.id) == "undefined") {
            res.json({ code: 1, message: message.INCORRECT_DATA });
            return;
        }
        let delete_***table*** = await ***table***Service.delete***table_u***(body.id);
        if (delete_***table***) {
            res.json({ code: 0, message: message.DELETE_***table***_SUCCESS });
        } else {
            res.json({ code: 1, message: message.ERROR });
        }
    }

    async getList***table_u***(req, res, next) {
        let query = req.query;
        let str_search = query.search || "";

        let limit = query.limit ? parseInt(query.limit) : LIMIT_DEFAULT;
        let offset = query.offset ? parseInt(query.offset) : OFFSET_DEFAULT;
        let list_***table*** = await ***table***Service.list***table_u***(str_search, limit, offset);
        if (list_***table***) {
            res.json({ code: 0, list_***table***: list_***table*** });
        } else {
            res.json({ code: 1, message: message.ERROR });
        }
    }

    async validateInput(data) {
        return {
            status: true,
            error_message: ""
        }
    }
}

module.exports = new ***table_u***Controller();
